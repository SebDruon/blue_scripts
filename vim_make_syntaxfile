#!/bin/bash

FILE_TAGS="./.tags"
FILE_PROTOTYPE="./.syntax_prototype"
FILE_STRUCT="./.syntax_struct"
FILE_MACRO="./.syntax_macro"
FILE_ENUM="./.syntax_enum"
FILE_ENUMERATOR="./.syntax_enumerator"
FILE_MEMBER="./.syntax_member"
FILE_VARIABLE="./.syntax_variable"

CURATED_TAGS="./.tags.cur"


rm -f $FILE_TAGS 
rm -f $CURATED_TAGS
rm -f $FILE_PROTOTYPE 
rm -f $FILE_STRUCT
rm -f $FILE_MACRO
rm -f $FILE_ENUM
rm -f $FILE_ENUMERATOR 
rm -f $FILE_MEMBER
rm -f $FILE_VARIABLE

## Run ctags and extract all tags

echo "Indexing $1"

ctags -R -x --_xformat="%K %N %n %{input}" --c-kinds=+p --langmap=c:.c.h -R -f $FILE_TAGS $1

## remove anonymous tags

grep -v "__anon" $FILE_TAGS > $CURATED_TAGS

## Extract prototypes

grep prototype $CURATED_TAGS | cut -f2 -d ' ' > $FILE_PROTOTYPE
grep struct $CURATED_TAGS | cut -f2 -d ' ' > $FILE_STRUCT
grep macro  $CURATED_TAGS | cut -f2 -d ' ' > $FILE_MACRO
grep enum  $CURATED_TAGS  | cut -f2 -d ' ' > $FILE_ENUM
grep enumerator  $CURATED_TAGS  | cut -f2 -d ' ' > $FILE_ENUMERATOR
grep member  $CURATED_TAGS  | cut -f2 -d ' ' | sort -u > $FILE_MEMBER
grep variable $CURATED_TAGS  | cut -f2 -d ' ' > $FILE_VARIABLE

#generate vim syntax file

OUTPUT_FILE="$2.vim"

rm -f $OUTPUT_FILE

echo "\" Vim syntax file" >> $OUTPUT_FILE
echo "\" Language: C Additions" >> $OUTPUT_FILE
echo "\" Date:" `date` >> $OUTPUT_FILE
echo "\" Generated by vim_make_syntaxe_file" >> $OUTPUT_FILE
echo "\" http://www.github.com/glaconbleu/blue_scripts" >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE

echo "\" --- Functions " >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE
while read p; do
      echo "syn keyword cLibFunction $p" >> $OUTPUT_FILE  
done < $FILE_PROTOTYPE
echo " " >> $OUTPUT_FILE

echo "\" --- Structures " >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE
while read p; do
      echo "syn keyword cLibStruct $p" >> $OUTPUT_FILE  
done < $FILE_STRUCT
echo " " >> $OUTPUT_FILE


echo "\" --- Macros " >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE
while read p; do
      echo "syn keyword cLibMacro $p" >> $OUTPUT_FILE  
done < $FILE_MACRO
echo " " >> $OUTPUT_FILE


echo "\" --- Enums " >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE
while read p; do
      echo "syn keyword cLibEnum $p" >> $OUTPUT_FILE  
done < $FILE_ENUM
echo " " >> $OUTPUT_FILE


echo "\" --- Members " >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE
while read p; do
      echo "syn keyword cLibMember $p" >> $OUTPUT_FILE  
done < $FILE_MEMBER
echo " " >> $OUTPUT_FILE

echo "\" --- Variables " >> $OUTPUT_FILE
echo " " >> $OUTPUT_FILE
while read p; do
      echo "syn keyword cLibVariable $p" >> $OUTPUT_FILE  
done < $FILE_VARIABLE
echo " " >> $OUTPUT_FILE

rm -f $FILE_TAGS 
rm -f $CURATED_TAGS
rm -f $FILE_PROTOTYPE 
rm -f $FILE_STRUCT
rm -f $FILE_MACRO
rm -f $FILE_ENUM
rm -f $FILE_ENUMERATOR 
rm -f $FILE_MEMBER
rm -f $FILE_VARIABLE

